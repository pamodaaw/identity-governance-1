swagger: '2.0'
######################################################
# Prolog
######################################################
info:
  version: "1.0.0"
  title: "WSO2 Identity Server Rest API - Session Information"
  description: |
    This document specifies a **RESTful API** for WSO2 **Identity Server** .

    It is written with [swagger 2](http://swagger.io/).

  contact:
    name: "WSO2"
    url: "http://wso2.com/products/identity-server/"
    email: "architecture@wso2.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

######################################################
# The fixed parts of the URLs of the API
######################################################

# The schemes supported by the API
schemes:
  - https

# The domain of the API.
# This is configured by the customer during deployment.
# The given host is just an example.
host: apis.is.com

# The base path of the API.
# Will be prefixed to all paths.
# if the tenant domain is carbon.super basepath can be /api/identity/auth like this too.
basePath: /t/{tenant-domain}/api/identity/auth

# The following media types can be passed as input in message bodies of the API.
# The actual media type must be specified in the Content-Type header field of the request.
# The default is json, i.e. the Content-Type header is not needed to
# be set, but supporting it serves extensibility.
consumes:
  - application/json

# The following media types may be passed as output in message bodies of the API.
# The media type(s) consumable by the requestor is specified in the Accept header field
# of the corresponding request.
# The actual media type returned will be specfied in the Content-Type header field
# of the of the response.
# The default of the Accept header is json, i.e. there is not needed to
# set the value, but supporting it serves extensibility.
produces:
  - application/json
paths:
  # Endpoint uses to send retrieve session information
 /session:
    get:
      tags:
      - "Session Information"
      description: "This API is used to retrieve user's session information."
      summary: "Get active sessions"
      operationId: "getUserSession"
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: '#/definitions/AllSessions'
        400:
          description: "Bad Request"
          schema:
             $ref: '#/definitions/Error'
        401:
          description: "Unauthorized"
          schema:
             $ref: '#/definitions/Error'
        404:
          description: "Not Found"
          schema:
             $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
             $ref: '#/definitions/Error'

    delete:
      tags:
      - "Session Termination"
      description: "This API is used to terminate user's session."
      summary: "Terminate all sessions"
      operationId: "terminateAllSessions"
      responses:
        200:
          description: "Successful response"
        204:
          description: "No content"
        400:
          description: "Bad Request"
          schema:
             $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
             $ref: "#/definitions/Error"

 /session/{sessionId}:
       delete:
        tags:
          - "Session Termination"
        description: "This API is used to terminate user's session."
        summary: "Terminate a session"
        operationId: "terminateASession"
        parameters:
          -
            name: "sessionId"
            in: "path"
            description: "id of the session"
            required: true
            type: "string"
        responses:
          200:
            description: "Successful response"
          204:
            description: "No content"
          400:
            description: "Bad Request"
            schema:
                $ref: "#/definitions/Error"
          401:
            description: "Unauthorized"
            schema:
                $ref: "#/definitions/Error"
          500:
            description: "Server Error"
            schema:
                $ref: "#/definitions/Error"

definitions:

#-----------------------------------------------------
# The Error Response  object
#-----------------------------------------------------
  Error:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      description:
        type: "string"

#-----------------------------------------------------
# The Session Response  object
#-----------------------------------------------------
  Application:
    type: "object"
    properties:
      subject:
        type: "string"
        description: "User name of application."
      app:
        type: "string"
        description: "Name of application."

#-----------------------------------------------------
# The Session Response  object
#-----------------------------------------------------
  Session:
    type: "object"
    properties:
      applications:
        type: "array"
        description: "Active applications in session."
        items:
          $ref: '#/definitions/Application'
      userAgent:
        type: "string"
        description: "User agent of session."
      ip:
        type: "string"
        description: "Ip address of particular session."
      loginTime:
        type: "string"
        description: "Login time of particular session."
      lastAccessTime:
        type: "string"
        description: "Last access time of particular session."
      sessionId:
        type: "string"
        description: "Id of particular session."

#-----------------------------------------------------
# The AllSessions Response  object
#-----------------------------------------------------
  AllSessions:
    type: "object"
    properties:
      sessions:
        type: "array"
        description: "Active applications in session."
        items:
          $ref: '#/definitions/Session'